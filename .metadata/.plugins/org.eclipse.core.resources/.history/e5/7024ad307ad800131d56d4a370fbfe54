/*
 * @author	Elijah Freestone 
 *
 * Project	Java2Project1
 * 
 * Package	com.elijahfreestone.networkConnection
 * 
 * date		May 6, 2014
 */

package com.elijahfreestone.networkConnection;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.elijahfreestone.java2project1.MainActivity;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;


/**
 * The Class JSONData handles network connection testing and parsing and object creation of JSON Data from the API call that takes place
 * in DataService.
 */
public class JSONData {
	static String responseString;
	
	/**
	 * Connection status.
	 *
	 * @param myContext the my context
	 * @return the boolean
	 */
	public static Boolean connectionStatus(Context myContext) {
		Boolean connectionBool = false;

		ConnectivityManager connectionManager = (ConnectivityManager) myContext.getSystemService(Context.CONNECTIVITY_SERVICE);
		
		NetworkInfo networkInfo = connectionManager.getActiveNetworkInfo();
		
		if (networkInfo != null) {
			if (networkInfo.isConnected()) {
				connectionBool = true;
			}
		}
		return connectionBool;
	} //connectionStatus Close
	
	public static String readJSON() {
		String results, dvdTitle, releaseDate, criticRating, audienceRating, objectInfo;
		StringBuffer newReleaseBuffer;
		
		JSONObject newReleaseObject = new JSONObject();
		
		objectInfo = "";
		newReleaseBuffer = new StringBuffer();
		
		JSONArray newReleaseArray = newReleaseObject.get("movies").
		
		
		
		return null;
	} //readJSON Close
	
	// Method to get response from url
	public static String getResponse(URL url) {
		// Create string for response
		String response = "";

		try {
			// Open connection
			URLConnection connection = url.openConnection();
			// Create buffered input stream
			BufferedInputStream bufferedInputStream = new BufferedInputStream(
					connection.getInputStream());
			// Create byte and set to 1024
			byte[] contextByte = new byte[1024];
			// Create int for bytes read
			int byteRead = 0;
			// Create string buffer for adding response to
			StringBuffer responseBuffer = new StringBuffer();
			// While loop
			while ((byteRead = bufferedInputStream.read(contextByte)) != -1) {
				// Set response string to receive bytes
				response = new String(contextByte, 0, byteRead);
				// Append response to response buffer
				responseBuffer.append(response);
			}

			// Fill response string with response buffer once while loop
			// completes
			response = responseBuffer.toString();
			// System.out.println(response);
			// Log response
			Log.i(TAG, response);
		} catch (IOException e) {
			// Set response to error
			response = "URL broken";
			// e.printStackTrace();
			// Log error
			Log.e(TAG, "Something went wrong", e);
		}
		// Return reponse string
		return response;
	} //getResponse Close
	
}
