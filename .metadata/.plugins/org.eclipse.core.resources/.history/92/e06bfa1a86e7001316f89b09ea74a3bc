/*
 * @author	Elijah Freestone 
 *
 * Project	Java2Project4
 * 
 * Package	com.elijahfreestone.java2project4
 * 
 * date		May 29, 2014
 */

package com.elijahfreestone.java2project4;

import java.io.File;

import android.app.AlertDialog;
import android.app.Dialog;
import android.app.DialogFragment;
import android.content.DialogInterface;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.view.LayoutInflater;
import android.view.View;
import android.webkit.WebView.FindListener;
import android.widget.EditText;
import android.widget.TextView;

import com.elijahfreestone.java2project4.MainActivity.DialogType;

// TODO: Auto-generated Javadoc
/**
 * The Class AlertDialogFragment handles alert dialog fragments for the action bar.
 */
public class AlertDialogFragment extends DialogFragment {
	public static DialogType type;
	public static View favoritesView;
	public static TextView ratedMovies;
	static String userRatingFile = "user_rating.txt";
	
	/* (non-Javadoc)
	 * @see android.app.DialogFragment#onCreateDialog(android.os.Bundle)
	 */
	@Override
	public Dialog onCreateDialog(Bundle savedInstanceState) {
		AlertDialog.Builder alertBuilder = new AlertDialog.Builder(getActivity());
		LayoutInflater layoutInflater = getActivity().getLayoutInflater();
		
		// Switch statement for handling Action Bar item clicks accordingly
		switch (type) {
		case SEARCH:
			alertBuilder.setView(layoutInflater.inflate(R.layout.search_dialog_fragment, null))
			// Set Positive and Negative Action Buttons
			.setPositiveButton("Search", new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					// TODO Auto-generated method stub
					
				}
			})
			.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					AlertDialogFragment.this.getDialog().cancel();
				}
			});
			
			break;
			
		case FAVORITES:
			favoritesView = layoutInflater.inflate(R.layout.favorites_dialog_fragment, null);
			ratedMovies = (TextView) favoritesView.findViewById(R.id.ratedMovies);
			
			File ratingFile = MainActivity.myContext.getFileStreamPath(userRatingFile);
			Boolean fileExists = ratingFile.exists();
			if (fileExists && ratedMovies != null) { 
				JSONData.displayUserRatingFromFile();
				String ratedMoviesFromFile = JSONData.userRatingString;
				if (ratedMoviesFromFile != null) {
					AlertDialogFragment.ratedMovies.setText(ratedMoviesFromFile);
				} else {
					AlertDialogFragment.ratedMovies.setText("ratedMoviesFromFile is null");
				}
			}
			
			alertBuilder.setView(favoritesView)
			// Set action button to dismiss
			.setPositiveButton("OK", new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					AlertDialogFragment.this.getDialog().cancel();
				}
			});
			
			break;
		
		case INFO:
			
			break;
			
		case PREFERENCES:
			final View preferencesView = layoutInflater.inflate(R.layout.preferences_dialog_fragment, null);
			
			alertBuilder.setView(preferencesView)
			.setPositiveButton("Save", new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					EditText userName = (EditText) preferencesView.findViewById(R.id.userName);
					SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(MainActivity.myContext);
					Editor editor = preferences.edit();
					editor.putString("username", userName.getText().toString());
					
					if (preferences.getString("username", "").toString().isEmpty()) {
						editor.putString("username", "guest");
						editor.apply();
					}
					MainActivity.userNameTextView.setText("Welcome, " + preferences.getString("username", ""));
				}
			})
			.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					AlertDialogFragment.this.getDialog().cancel();
				}
			});
			 
			break;

		default:
			break;
		}
		
		return alertBuilder.create();
	} // onCreateDialog Close
	
	/*
	 * newInstance returns a new instance of AlertDialogFragment
	 */
	public static AlertDialogFragment newInstance(DialogType dialogType) {
		type = dialogType;
		return new AlertDialogFragment();
	}

}
